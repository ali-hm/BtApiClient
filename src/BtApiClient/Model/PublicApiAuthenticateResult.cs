/* 
 * behTIME
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = BtApiClient.Client.SwaggerDateConverter;

namespace BtApiClient.Model
{
    /// <summary>
    /// PublicApiAuthenticateResult
    /// </summary>
    [DataContract]
    public partial class PublicApiAuthenticateResult :  IEquatable<PublicApiAuthenticateResult>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="PublicApiAuthenticateResult" /> class.
        /// </summary>
        /// <param name="token">token.</param>
        /// <param name="userInfo">userInfo.</param>
        /// <param name="result">result.</param>
        /// <param name="message">message.</param>
        /// <param name="errorExtraData">errorExtraData.</param>
        public PublicApiAuthenticateResult(string token = default(string), PublicApiUserInfo userInfo = default(PublicApiUserInfo), string result = default(string), string message = default(string), string errorExtraData = default(string))
        {
            this.Token = token;
            this.UserInfo = userInfo;
            this.Result = result;
            this.Message = message;
            this.ErrorExtraData = errorExtraData;
        }
        
        /// <summary>
        /// Gets or Sets Token
        /// </summary>
        [DataMember(Name="Token", EmitDefaultValue=false)]
        public string Token { get; set; }

        /// <summary>
        /// Gets or Sets UserInfo
        /// </summary>
        [DataMember(Name="UserInfo", EmitDefaultValue=false)]
        public PublicApiUserInfo UserInfo { get; set; }

        /// <summary>
        /// Gets or Sets Result
        /// </summary>
        [DataMember(Name="Result", EmitDefaultValue=false)]
        public string Result { get; set; }

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [DataMember(Name="Message", EmitDefaultValue=false)]
        public string Message { get; set; }

        /// <summary>
        /// Gets or Sets ErrorExtraData
        /// </summary>
        [DataMember(Name="ErrorExtraData", EmitDefaultValue=false)]
        public string ErrorExtraData { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class PublicApiAuthenticateResult {\n");
            sb.Append("  Token: ").Append(Token).Append("\n");
            sb.Append("  UserInfo: ").Append(UserInfo).Append("\n");
            sb.Append("  Result: ").Append(Result).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("  ErrorExtraData: ").Append(ErrorExtraData).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as PublicApiAuthenticateResult);
        }

        /// <summary>
        /// Returns true if PublicApiAuthenticateResult instances are equal
        /// </summary>
        /// <param name="input">Instance of PublicApiAuthenticateResult to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(PublicApiAuthenticateResult input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Token == input.Token ||
                    (this.Token != null &&
                    this.Token.Equals(input.Token))
                ) && 
                (
                    this.UserInfo == input.UserInfo ||
                    (this.UserInfo != null &&
                    this.UserInfo.Equals(input.UserInfo))
                ) && 
                (
                    this.Result == input.Result ||
                    (this.Result != null &&
                    this.Result.Equals(input.Result))
                ) && 
                (
                    this.Message == input.Message ||
                    (this.Message != null &&
                    this.Message.Equals(input.Message))
                ) && 
                (
                    this.ErrorExtraData == input.ErrorExtraData ||
                    (this.ErrorExtraData != null &&
                    this.ErrorExtraData.Equals(input.ErrorExtraData))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Token != null)
                    hashCode = hashCode * 59 + this.Token.GetHashCode();
                if (this.UserInfo != null)
                    hashCode = hashCode * 59 + this.UserInfo.GetHashCode();
                if (this.Result != null)
                    hashCode = hashCode * 59 + this.Result.GetHashCode();
                if (this.Message != null)
                    hashCode = hashCode * 59 + this.Message.GetHashCode();
                if (this.ErrorExtraData != null)
                    hashCode = hashCode * 59 + this.ErrorExtraData.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
