/* 
 * behTIME
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = BtApiClient.Client.SwaggerDateConverter;

namespace BtApiClient.Model
{
    /// <summary>
    /// ApiProjectModel
    /// </summary>
    [DataContract]
    public partial class ApiProjectModel :  IEquatable<ApiProjectModel>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ApiProjectModel" /> class.
        /// </summary>
        /// <param name="projectId">projectId.</param>
        /// <param name="projectTitle">projectTitle.</param>
        /// <param name="status">status.</param>
        /// <param name="statusText">statusText.</param>
        /// <param name="ownerId">ownerId.</param>
        /// <param name="ownerTitle">ownerTitle.</param>
        /// <param name="description">description.</param>
        /// <param name="contractTitle">contractTitle.</param>
        /// <param name="customerTitle">customerTitle.</param>
        /// <param name="customerId">customerId.</param>
        /// <param name="contractId">contractId.</param>
        /// <param name="filesCount">filesCount.</param>
        public ApiProjectModel(long? projectId = default(long?), string projectTitle = default(string), int? status = default(int?), string statusText = default(string), long? ownerId = default(long?), string ownerTitle = default(string), string description = default(string), string contractTitle = default(string), string customerTitle = default(string), long? customerId = default(long?), long? contractId = default(long?), int? filesCount = default(int?))
        {
            this.ProjectId = projectId;
            this.ProjectTitle = projectTitle;
            this.Status = status;
            this.StatusText = statusText;
            this.OwnerId = ownerId;
            this.OwnerTitle = ownerTitle;
            this.Description = description;
            this.ContractTitle = contractTitle;
            this.CustomerTitle = customerTitle;
            this.CustomerId = customerId;
            this.ContractId = contractId;
            this.FilesCount = filesCount;
        }
        
        /// <summary>
        /// Gets or Sets ProjectId
        /// </summary>
        [DataMember(Name="ProjectId", EmitDefaultValue=false)]
        public long? ProjectId { get; set; }

        /// <summary>
        /// Gets or Sets ProjectTitle
        /// </summary>
        [DataMember(Name="ProjectTitle", EmitDefaultValue=false)]
        public string ProjectTitle { get; set; }

        /// <summary>
        /// Gets or Sets Status
        /// </summary>
        [DataMember(Name="Status", EmitDefaultValue=false)]
        public int? Status { get; set; }

        /// <summary>
        /// Gets or Sets StatusText
        /// </summary>
        [DataMember(Name="StatusText", EmitDefaultValue=false)]
        public string StatusText { get; set; }

        /// <summary>
        /// Gets or Sets OwnerId
        /// </summary>
        [DataMember(Name="OwnerId", EmitDefaultValue=false)]
        public long? OwnerId { get; set; }

        /// <summary>
        /// Gets or Sets OwnerTitle
        /// </summary>
        [DataMember(Name="OwnerTitle", EmitDefaultValue=false)]
        public string OwnerTitle { get; set; }

        /// <summary>
        /// Gets or Sets Description
        /// </summary>
        [DataMember(Name="Description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// Gets or Sets ContractTitle
        /// </summary>
        [DataMember(Name="ContractTitle", EmitDefaultValue=false)]
        public string ContractTitle { get; set; }

        /// <summary>
        /// Gets or Sets CustomerTitle
        /// </summary>
        [DataMember(Name="CustomerTitle", EmitDefaultValue=false)]
        public string CustomerTitle { get; set; }

        /// <summary>
        /// Gets or Sets CustomerId
        /// </summary>
        [DataMember(Name="CustomerId", EmitDefaultValue=false)]
        public long? CustomerId { get; set; }

        /// <summary>
        /// Gets or Sets ContractId
        /// </summary>
        [DataMember(Name="ContractId", EmitDefaultValue=false)]
        public long? ContractId { get; set; }

        /// <summary>
        /// Gets or Sets FilesCount
        /// </summary>
        [DataMember(Name="FilesCount", EmitDefaultValue=false)]
        public int? FilesCount { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ApiProjectModel {\n");
            sb.Append("  ProjectId: ").Append(ProjectId).Append("\n");
            sb.Append("  ProjectTitle: ").Append(ProjectTitle).Append("\n");
            sb.Append("  Status: ").Append(Status).Append("\n");
            sb.Append("  StatusText: ").Append(StatusText).Append("\n");
            sb.Append("  OwnerId: ").Append(OwnerId).Append("\n");
            sb.Append("  OwnerTitle: ").Append(OwnerTitle).Append("\n");
            sb.Append("  Description: ").Append(Description).Append("\n");
            sb.Append("  ContractTitle: ").Append(ContractTitle).Append("\n");
            sb.Append("  CustomerTitle: ").Append(CustomerTitle).Append("\n");
            sb.Append("  CustomerId: ").Append(CustomerId).Append("\n");
            sb.Append("  ContractId: ").Append(ContractId).Append("\n");
            sb.Append("  FilesCount: ").Append(FilesCount).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ApiProjectModel);
        }

        /// <summary>
        /// Returns true if ApiProjectModel instances are equal
        /// </summary>
        /// <param name="input">Instance of ApiProjectModel to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ApiProjectModel input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ProjectId == input.ProjectId ||
                    (this.ProjectId != null &&
                    this.ProjectId.Equals(input.ProjectId))
                ) && 
                (
                    this.ProjectTitle == input.ProjectTitle ||
                    (this.ProjectTitle != null &&
                    this.ProjectTitle.Equals(input.ProjectTitle))
                ) && 
                (
                    this.Status == input.Status ||
                    (this.Status != null &&
                    this.Status.Equals(input.Status))
                ) && 
                (
                    this.StatusText == input.StatusText ||
                    (this.StatusText != null &&
                    this.StatusText.Equals(input.StatusText))
                ) && 
                (
                    this.OwnerId == input.OwnerId ||
                    (this.OwnerId != null &&
                    this.OwnerId.Equals(input.OwnerId))
                ) && 
                (
                    this.OwnerTitle == input.OwnerTitle ||
                    (this.OwnerTitle != null &&
                    this.OwnerTitle.Equals(input.OwnerTitle))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.ContractTitle == input.ContractTitle ||
                    (this.ContractTitle != null &&
                    this.ContractTitle.Equals(input.ContractTitle))
                ) && 
                (
                    this.CustomerTitle == input.CustomerTitle ||
                    (this.CustomerTitle != null &&
                    this.CustomerTitle.Equals(input.CustomerTitle))
                ) && 
                (
                    this.CustomerId == input.CustomerId ||
                    (this.CustomerId != null &&
                    this.CustomerId.Equals(input.CustomerId))
                ) && 
                (
                    this.ContractId == input.ContractId ||
                    (this.ContractId != null &&
                    this.ContractId.Equals(input.ContractId))
                ) && 
                (
                    this.FilesCount == input.FilesCount ||
                    (this.FilesCount != null &&
                    this.FilesCount.Equals(input.FilesCount))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ProjectId != null)
                    hashCode = hashCode * 59 + this.ProjectId.GetHashCode();
                if (this.ProjectTitle != null)
                    hashCode = hashCode * 59 + this.ProjectTitle.GetHashCode();
                if (this.Status != null)
                    hashCode = hashCode * 59 + this.Status.GetHashCode();
                if (this.StatusText != null)
                    hashCode = hashCode * 59 + this.StatusText.GetHashCode();
                if (this.OwnerId != null)
                    hashCode = hashCode * 59 + this.OwnerId.GetHashCode();
                if (this.OwnerTitle != null)
                    hashCode = hashCode * 59 + this.OwnerTitle.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.ContractTitle != null)
                    hashCode = hashCode * 59 + this.ContractTitle.GetHashCode();
                if (this.CustomerTitle != null)
                    hashCode = hashCode * 59 + this.CustomerTitle.GetHashCode();
                if (this.CustomerId != null)
                    hashCode = hashCode * 59 + this.CustomerId.GetHashCode();
                if (this.ContractId != null)
                    hashCode = hashCode * 59 + this.ContractId.GetHashCode();
                if (this.FilesCount != null)
                    hashCode = hashCode * 59 + this.FilesCount.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
